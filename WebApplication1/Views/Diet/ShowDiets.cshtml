@using WebApplication1.Models
@model WebApplication1.Models.ShowDietsViewModel

@{
    ViewBag.Title = "title";

}

@*This is new view, this view is showing a board which user has chosen. This will be most important view in app.
    I've add it here because we didn't had time to create it last time.*@

<div class="container-fluid">
    <main class="row">
        <div class="col-md-12">
            <div class="board">
                <!--LIST-->
                @foreach (DietViewModel diet in Model.DietsList)  //Iterate all lists in board and display it
                {
                    <section data-list-id="@diet.DietId" class="list">
                        <header class="list__header clearfix">
                            <h4 class="pull-left">@diet.Date</h4> @*Display list name*@
                            <i class="fa fa-trash-o trash pull-right list__remove-list-btn"></i>
                        </header>
                        <div class="list__cards-container ui-sortable">
                            @foreach (var product in diet.ChosenProducts) //Iterate all cards in list
                            {
                                <!--card-->
                                <div class="card">
                                    <div class="card__header clearfix">
                                        <h5 class="pull-left">@product.PRODUCT_DESCRIPTION</h5> @*Display card name*@
                                        <i class="fa fa-trash-o trash pull-right card__remove-card-btn" data-card-id="@product.PRODUCT_ID"></i>
                                    </div>
                                    <div class="card__body">
                                        @product. @*Display card description*@
                                    </div>
                                </div>
                            }
                            <!--card-->
                        </div>
                        <!--cardForm-->
                        @Html.Partial("AddProducts")  @*As last card display form to creating card, we didn't talk about
                            partials - but it's simple way to paste html code form other file
                            Whats more we can pass there it's own model. In this case it is createCardDto*@
                        <!--cardForm-->
                    </section>
                }
                <!--LIST-->
                @Html.Partial("Create") @*Like in cards as last list we display form for creating list, it works in the same way
                    as adding carD. There is used partial to injiect html code*@
            </div>
        </div>
    </main>
    @section scripts{
        @Scripts.Render("~/bundles/cardBundle")
    }
</div>